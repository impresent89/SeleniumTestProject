# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestDefaultSuite():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_001(self):
    self.driver.get("https://beat-cms.dalkomm.com/beat_backoffice/tableorder/order/list")
    self.driver.set_window_size(1680, 1050)
    self.driver.find_element(By.CSS_SELECTOR, "li:nth-child(7) span").click()
    self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(2) td").click()
    self.driver.find_element(By.NAME, "coupon_name").send_keys("!@#$$")
    self.driver.find_element(By.ID, "btnSearch").click()
    assert self.driver.find_element(By.CSS_SELECTOR, ".dataTables_empty").text == "쿠폰 내역이 없습니다."
    assert self.driver.find_element(By.CSS_SELECTOR, ".table-top-content > .pull-left").text == "총 0건 입니다."
  
  def test_002(self):
    self.driver.get("https://beat-cms.dalkomm.com/beat_backoffice/tableorder/order/list")
    self.driver.set_window_size(1920, 1080)
    self.driver.find_element(By.CSS_SELECTOR, "li:nth-child(7) span").click()
    self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(2) td").click()
    self.driver.find_element(By.NAME, "coupon_name").send_keys("[테스트]")
    self.driver.find_element(By.ID, "btnSearch").click()
  
  def test_004(self):
    self.driver.get("https://beat-cms.dalkomm.com/beat_backoffice/tableorder/order/list")
    self.driver.set_window_size(1920, 1080)
    self.driver.find_element(By.CSS_SELECTOR, "li:nth-child(7) span").click()
    self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(2) td").click()
    self.driver.find_element(By.NAME, "search_type").click()
    dropdown = self.driver.find_element(By.NAME, "search_type")
    dropdown.find_element(By.XPATH, "//option[. = '쿠폰유형']").click()
    self.driver.find_element(By.NAME, "coupon_type_item").click()
    self.driver.find_element(By.ID, "btnSearch").click()
  
  def test_005(self):
    self.driver.get("https://beat-cms.dalkomm.com/beat_backoffice/tableorder/order/list")
    self.driver.set_window_size(1920, 1080)
    self.driver.find_element(By.CSS_SELECTOR, "li:nth-child(7) span").click()
    self.driver.find_element(By.NAME, "search_type").click()
    dropdown = self.driver.find_element(By.NAME, "search_type")
    dropdown.find_element(By.XPATH, "//option[. = '쿠폰코드']").click()
    self.driver.find_element(By.NAME, "search_type").click()
    self.driver.find_element(By.NAME, "coupon_code").click()
    self.driver.find_element(By.NAME, "coupon_code").send_keys("gh00")
    self.driver.find_element(By.ID, "btnSearch").click()
    self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(2) td").click()
    assert self.driver.find_element(By.CSS_SELECTOR, ".dataTables_empty").text == "쿠폰 내역이 없습니다."
    assert self.driver.find_element(By.CSS_SELECTOR, ".table-top-content > .pull-left").text == "총 0건 입니다."
  
  def test_006(self):
    self.driver.get("https://beat-cms.dalkomm.com/beat_backoffice/tableorder/order/list")
    self.driver.set_window_size(1920, 1080)
    self.driver.find_element(By.CSS_SELECTOR, "li:nth-child(7) span").click()
    self.driver.find_element(By.NAME, "search_type").click()
    dropdown = self.driver.find_element(By.NAME, "search_type")
    dropdown.find_element(By.XPATH, "//option[. = '쿠폰코드']").click()
    self.driver.find_element(By.NAME, "search_type").click()
    self.driver.find_element(By.NAME, "coupon_code").click()
    self.driver.find_element(By.NAME, "coupon_code").send_keys("ㅇㅇㅇㅇㅇㅇㅇㅇㅇ")
    self.driver.find_element(By.ID, "btnSearch").click()
    self.driver.find_element(By.CSS_SELECTOR, ".m_location").click()
    assert self.driver.find_element(By.CSS_SELECTOR, ".dataTables_empty").text == "쿠폰 내역이 없습니다."
    assert self.driver.find_element(By.CSS_SELECTOR, ".table-top-content > .pull-left").text == "총 0건 입니다."
  
  def test_007(self):
    self.driver.get("https://beat-cms.dalkomm.com/beat_backoffice/tableorder/order/list")
    self.driver.set_window_size(1920, 1080)
    self.driver.find_element(By.CSS_SELECTOR, "li:nth-child(7) span").click()
    self.driver.find_element(By.NAME, "search_type").click()
    dropdown = self.driver.find_element(By.NAME, "search_type")
    dropdown.find_element(By.XPATH, "//option[. = '쿠폰코드']").click()
    self.driver.find_element(By.NAME, "search_type").click()
    self.driver.find_element(By.NAME, "coupon_code").click()
    self.driver.find_element(By.NAME, "coupon_code").send_keys("hj99")
    self.driver.find_element(By.ID, "btnSearch").click()
    self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(2) td").click()
  
  def test_008(self):
    self.driver.get("https://beat-cms.dalkomm.com/beat_backoffice/tableorder/order/list")
    self.driver.set_window_size(1920, 1080)
    self.driver.find_element(By.CSS_SELECTOR, "li:nth-child(7) span").click()
    self.driver.find_element(By.NAME, "search_type").click()
    dropdown = self.driver.find_element(By.NAME, "search_type")
    dropdown.find_element(By.XPATH, "//option[. = '발급가능기간']").click()
    self.driver.find_element(By.NAME, "search_type").click()
    self.driver.find_element(By.CSS_SELECTOR, "#datetimepicker6 > .input-group-addon").click()
    self.driver.find_element(By.CSS_SELECTOR, ".datepicker-days .picker-switch").click()
    self.driver.find_element(By.CSS_SELECTOR, ".datepicker-months .picker-switch").click()
    self.driver.find_element(By.CSS_SELECTOR, ".year:nth-child(4)").click()
    self.driver.find_element(By.CSS_SELECTOR, ".month:nth-child(1)").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) > .day:nth-child(2)").click()
    self.driver.find_element(By.CSS_SELECTOR, "#datetimepicker7 .glyphicon").click()
    self.driver.find_element(By.CSS_SELECTOR, ".datepicker-days .picker-switch").click()
    self.driver.find_element(By.CSS_SELECTOR, ".datepicker-months .picker-switch").click()
    self.driver.find_element(By.CSS_SELECTOR, ".year:nth-child(4)").click()
    self.driver.find_element(By.CSS_SELECTOR, ".month:nth-child(1)").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(5) > .day:nth-child(4)").click()
    self.driver.find_element(By.ID, "btnSearch").click()
    assert self.driver.find_element(By.CSS_SELECTOR, ".dataTables_empty").text == "쿠폰 내역이 없습니다."
    assert self.driver.find_element(By.CSS_SELECTOR, ".table-top-content > .pull-left").text == "총 0건 입니다."
  
  def test_009(self):
    self.driver.get("https://beat-cms.dalkomm.com/beat_backoffice/tableorder/order/list")
    self.driver.set_window_size(1920, 1080)
    self.driver.find_element(By.CSS_SELECTOR, "li:nth-child(7) span").click()
    self.driver.find_element(By.NAME, "search_type").click()
    dropdown = self.driver.find_element(By.NAME, "search_type")
    dropdown.find_element(By.XPATH, "//option[. = '발급가능기간']").click()
    self.driver.find_element(By.NAME, "search_type").click()
    self.driver.find_element(By.ID, "btnSearch").click()
  
  def test_0101(self):
    self.driver.get("https://beat-cms.dalkomm.com/beat_backoffice/tableorder/order/list")
    self.driver.set_window_size(1920, 1080)
    self.driver.find_element(By.CSS_SELECTOR, "li:nth-child(7) span").click()
    self.driver.find_element(By.NAME, "search_type").click()
    dropdown = self.driver.find_element(By.NAME, "search_type")
    dropdown.find_element(By.XPATH, "//option[. = '노출여부']").click()
    self.driver.find_element(By.NAME, "search_type").click()
    self.driver.find_element(By.NAME, "is_expose").click()
    self.driver.find_element(By.ID, "btnSearch").click()
    assert self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(1) > td:nth-child(7)").text == "노출"
  
  def test_0102(self):
    self.driver.get("https://beat-cms.dalkomm.com/beat_backoffice/tableorder/order/list")
    self.driver.set_window_size(1920, 1080)
    self.driver.find_element(By.CSS_SELECTOR, "li:nth-child(7) span").click()
    self.driver.find_element(By.NAME, "search_type").click()
    dropdown = self.driver.find_element(By.NAME, "search_type")
    dropdown.find_element(By.XPATH, "//option[. = '노출여부']").click()
    self.driver.find_element(By.NAME, "search_type").click()
    self.driver.find_element(By.CSS_SELECTOR, ".search_input:nth-child(6) > .check:nth-child(2) > input").click()
    self.driver.find_element(By.ID, "btnSearch").click()
    assert self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(1) > td:nth-child(7)").text == "비노출"
  
  def test_011(self):
    self.driver.get("https://beat-cms.dalkomm.com/beat_backoffice/tableorder/order/list")
    self.driver.set_window_size(1920, 1080)
    self.driver.find_element(By.CSS_SELECTOR, "li:nth-child(7) span").click()
    self.driver.find_element(By.CSS_SELECTOR, ".btn-default > strong").click()
    self.driver.find_element(By.NAME, "cancel").click()
    assert self.driver.find_element(By.CSS_SELECTOR, "h1").text == "쿠폰관리"
  
  def test_013(self):
    self.driver.get("https://beat-cms.dalkomm.com/beat_backoffice/tableorder/order/list")
    self.driver.set_window_size(1920, 1080)
    self.driver.find_element(By.CSS_SELECTOR, "li:nth-child(7) span").click()
    self.driver.find_element(By.CSS_SELECTOR, ".btn-default > strong").click()
    assert self.driver.find_element(By.CSS_SELECTOR, "#form_tab1 tr:nth-child(1) > th:nth-child(1)").text == "*쿠폰명"
    assert self.driver.find_element(By.CSS_SELECTOR, "#form_tab1 th:nth-child(3)").text == "*쿠폰코드"
    assert self.driver.find_element(By.CSS_SELECTOR, "#form_tab1 tr:nth-child(2) > th").text == "*중요유의사항"
    assert self.driver.find_element(By.CSS_SELECTOR, "#form_tab1 tr:nth-child(3) > th").text == "*세부유의사항"
    assert self.driver.find_element(By.CSS_SELECTOR, "#form_tab1 tr:nth-child(5) > th").text == "*할인금액"
    assert self.driver.find_element(By.CSS_SELECTOR, "#form_tab1 tr:nth-child(6) > th").text == "*할인가능상품 지정"
    assert self.driver.find_element(By.CSS_SELECTOR, "#form_tab1 tr:nth-child(7) > th").text == "* 매장지정"
    assert self.driver.find_element(By.CSS_SELECTOR, "#form_tab1 tr:nth-child(9) > th").text == "*최소이용가능금액(할인 후 가격 기준)"
    assert self.driver.find_element(By.CSS_SELECTOR, "#form_tab1 tr:nth-child(10) > th").text == "*이용가능 시간 제한"
    assert self.driver.find_element(By.CSS_SELECTOR, "#form_tab1 tr:nth-child(11) > th").text == "*쿠폰 이미지"
    assert self.driver.find_element(By.CSS_SELECTOR, "#form_tab1 tr:nth-child(12) > th").text == "*발급가능기간"
    assert self.driver.find_element(By.CSS_SELECTOR, "#form_tab1 tr:nth-child(13) > th").text == "*노출여부"
  
  def test_014(self):
    self.driver.get("https://beat-cms.dalkomm.com/beat_backoffice/tableorder/order/list")
    self.driver.set_window_size(1920, 1080)
    self.driver.find_element(By.CSS_SELECTOR, "li:nth-child(7) span").click()
    self.driver.find_element(By.CSS_SELECTOR, ".btn-default > strong").click()
    self.driver.find_element(By.NAME, "coupon_name").click()
    self.driver.find_element(By.NAME, "coupon_name").send_keys("[테스트onetwo]!@#$")
  
  def test_015(self):
    self.driver.get("https://beat-cms.dalkomm.com/beat_backoffice/tableorder/order/list")
    self.driver.set_window_size(1920, 1080)
    self.driver.find_element(By.CSS_SELECTOR, "li:nth-child(7) span").click()
    self.driver.find_element(By.CSS_SELECTOR, ".btn-default > strong").click()
    self.driver.find_element(By.NAME, "coupon_code").click()
    self.driver.find_element(By.NAME, "coupon_code").send_keys("테스트야")
    self.driver.find_element(By.NAME, "check_coupon_code").click()
  
  def test_018(self):
    self.driver.get("https://beat-cms.dalkomm.com/beat_backoffice/tableorder/order/list")
    self.driver.set_window_size(1920, 1080)
    self.driver.find_element(By.CSS_SELECTOR, "li:nth-child(7) span").click()
    self.driver.find_element(By.CSS_SELECTOR, ".btn-default > strong").click()
    self.driver.find_element(By.NAME, "important_cautions").click()
    self.driver.find_element(By.NAME, "important_cautions").send_keys("가나다라마바사아자차카타파하가나다라마바사하가나다라마바사")
  
  def test_019(self):
    self.driver.get("https://beat-cms.dalkomm.com/beat_backoffice/tableorder/order/list")
    self.driver.set_window_size(1920, 1080)
    self.driver.find_element(By.CSS_SELECTOR, "li:nth-child(7) span").click()
    self.driver.find_element(By.CSS_SELECTOR, ".btn-default > strong").click()
    self.driver.find_element(By.NAME, "detail_cautions").click()
    self.driver.find_element(By.NAME, "detail_cautions").send_keys("가나다라마바사아자차카타파하가나다라마바사하가나다라마바사가나다라마바사아자차카타파하가나다라마바사하가나다라마바사가나다라마바사아자차카타파하가나다라마바사하가나다라마바사가나다라마바사아자차카타파하가나다라마바사하가나다라마바사가나다라마바사아자차카타파하가나다라마바사하가나다라마바사가나다라마바사아자차카타파하가나다라마바사하가나다라마바사가나다라마바사아자차카타파하가나다라마바사하가나다라마바사가나다라마바사아자차카타파하가나다라마바사하가나다라마바사가나다라마바사아자차카타파하가나다라마바사하가나다라마바사가나다라마바사아자차카타파하가나다라마바사하가나다라마바사가나다라마바사아자차카타파하가나다라마바사하가나다라마바사가나다라마바사아자차카타파하가나다라마바사하가나다라마바사가나다라마바사아자차카타파하가나다라마바사하가나다라마바사가나다라마바사아자차카타파하가나다라마바사하가나다라마바사가나다라마바사아자차카타파하가나다라마바사하가나다라마바사")
  
  def test_022(self):
    self.driver.get("https://beat-cms.dalkomm.com/beat_backoffice/tableorder/order/list")
    self.driver.set_window_size(1920, 1080)
    self.driver.find_element(By.CSS_SELECTOR, "li:nth-child(7) span").click()
    self.driver.find_element(By.CSS_SELECTOR, ".btn-default > strong").click()
    assert self.driver.find_element(By.CSS_SELECTOR, "#form_tab1 tr:nth-child(4) > td").text == "최현재"
  
  def test_024(self):
    self.driver.get("https://beat-cms.dalkomm.com/beat_backoffice/tableorder/order/list")
    self.driver.set_window_size(1920, 1080)
    self.driver.find_element(By.CSS_SELECTOR, "li:nth-child(7) span").click()
    self.driver.find_element(By.CSS_SELECTOR, ".btn-default > strong").click()
    assert self.driver.find_element(By.CSS_SELECTOR, "#form_tab1 tr:nth-child(6) .check:nth-child(1)").text == "아메리카노만 가능"
  
  def test_025(self):
    self.driver.get("https://beat-cms.dalkomm.com/beat_backoffice/tableorder/order/list")
    self.driver.set_window_size(1920, 1080)
    self.driver.find_element(By.CSS_SELECTOR, "li:nth-child(7) span").click()
    self.driver.find_element(By.CSS_SELECTOR, ".btn-default > strong").click()
    self.driver.find_element(By.NAME, "discount_menu_modal").click()
  
  def test_026(self):
    self.driver.get("https://beat-cms.dalkomm.com/beat_backoffice/tableorder/order/list")
    self.driver.set_window_size(1920, 1080)
    self.driver.find_element(By.CSS_SELECTOR, "li:nth-child(7) span").click()
    self.driver.find_element(By.CSS_SELECTOR, ".btn-default > strong").click()
    self.driver.find_element(By.NAME, "discount_menu_modal").click()
    self.driver.find_element(By.NAME, "discount_menu_all").click()
    assert self.driver.find_element(By.NAME, "discount_menu_all").is_selected() is True
    assert self.driver.find_element(By.NAME, "discount_category").is_selected() is True
    assert self.driver.find_element(By.NAME, "discount_menu").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) .check:nth-child(2) > input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) .check:nth-child(3) > input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) .check:nth-child(4) > input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) .check:nth-child(5) > input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) .check:nth-child(6) > input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) .check:nth-child(7) > input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) .check:nth-child(8) > input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) .check:nth-child(9) > input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) .check:nth-child(10) > input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) .check:nth-child(11) > input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) .check:nth-child(12) > input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) .check:nth-child(13) > input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) .check:nth-child(14) > input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(2) > th input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(2) > td > .check:nth-child(1) > input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(2) .check:nth-child(2) > input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(2) .check:nth-child(3) > input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(2) .check:nth-child(4) > input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(2) .check:nth-child(5) > input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(2) .check:nth-child(6) > input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(2) .check:nth-child(7) > input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(2) .check:nth-child(8) > input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(2) .check:nth-child(9) > input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(2) .check:nth-child(10) > input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(2) .check:nth-child(11) > input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(2) .check:nth-child(12) > input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(2) .check:nth-child(13) > input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(2) .check:nth-child(14) > input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".check:nth-child(15) > input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".check:nth-child(16) > input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".check:nth-child(17) > input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".check:nth-child(18) > input").is_selected() is True
  
  def test_027(self):
    self.driver.get("https://beat-cms.dalkomm.com/beat_backoffice/tableorder/order/list")
    self.driver.set_window_size(1920, 1080)
    self.driver.find_element(By.CSS_SELECTOR, "li:nth-child(7) span").click()
    self.driver.find_element(By.CSS_SELECTOR, ".btn-default > strong").click()
    self.driver.find_element(By.NAME, "discount_menu_modal").click()
    self.driver.find_element(By.NAME, "discount_category").click()
    assert self.driver.find_element(By.NAME, "discount_category").is_selected() is True
    assert self.driver.find_element(By.NAME, "discount_menu").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) .check:nth-child(2) > input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) .check:nth-child(3) > input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) .check:nth-child(4) > input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) .check:nth-child(5) > input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) .check:nth-child(6) > input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) .check:nth-child(7) > input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) .check:nth-child(8) > input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) .check:nth-child(9) > input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) .check:nth-child(10) > input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) .check:nth-child(11) > input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) .check:nth-child(12) > input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) .check:nth-child(13) > input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) .check:nth-child(14) > input").is_selected() is True
  
  def test_028non(self):
    self.driver.get("https://beat-cms.dalkomm.com/beat_backoffice/tableorder/order/list")
    self.driver.set_window_size(1920, 1080)
    self.driver.find_element(By.CSS_SELECTOR, "li:nth-child(7) span").click()
    self.driver.find_element(By.CSS_SELECTOR, ".btn-default > strong").click()
    self.driver.find_element(By.NAME, "discount_menu_modal").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(2) > th input").click()
    assert self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(2) > th input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(2) > td > .check:nth-child(1) > input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(2) .check:nth-child(2) > input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(2) .check:nth-child(3) > input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(2) .check:nth-child(4) > input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(2) .check:nth-child(5) > input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(2) .check:nth-child(6) > input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(2) .check:nth-child(7) > input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(2) .check:nth-child(8) > input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(2) .check:nth-child(9) > input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(2) .check:nth-child(10) > input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(2) .check:nth-child(11) > input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(2) .check:nth-child(12) > input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(2) .check:nth-child(13) > input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(2) .check:nth-child(14) > input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".check:nth-child(15) > input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".check:nth-child(16) > input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".check:nth-child(17) > input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".check:nth-child(18) > input").is_selected() is True
  
  def test_029(self):
    self.driver.get("https://beat-cms.dalkomm.com/beat_backoffice/tableorder/order/list")
    self.driver.set_window_size(1920, 1080)
    self.driver.find_element(By.CSS_SELECTOR, "li:nth-child(7) span").click()
    self.driver.find_element(By.CSS_SELECTOR, ".btn-default > strong").click()
    self.driver.find_element(By.NAME, "discount_menu_modal").click()
    self.driver.find_element(By.NAME, "discount_menu").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) .check:nth-child(2) > input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) .check:nth-child(3) > input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) .check:nth-child(4) > input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) .check:nth-child(5) > input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) .check:nth-child(6) > input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) .check:nth-child(7) > input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) .check:nth-child(8) > input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) .check:nth-child(9) > input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) .check:nth-child(10) > input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) .check:nth-child(11) > input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) .check:nth-child(12) > input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) .check:nth-child(13) > input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) .check:nth-child(14) > input").click()
    assert self.driver.find_element(By.NAME, "discount_category").is_selected() is True
  
  def test_030non(self):
    self.driver.get("https://beat-cms.dalkomm.com/beat_backoffice/tableorder/order/list")
    self.driver.set_window_size(1920, 1080)
    self.driver.find_element(By.CSS_SELECTOR, "li:nth-child(7) span").click()
    self.driver.find_element(By.CSS_SELECTOR, ".btn-default > strong").click()
    self.driver.find_element(By.NAME, "discount_menu_modal").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(2) > td > .check:nth-child(1) > input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(2) .check:nth-child(2) > input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(2) .check:nth-child(3) > input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(2) .check:nth-child(4) > input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(2) .check:nth-child(5) > input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(2) .check:nth-child(6) > input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(2) .check:nth-child(7) > input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(2) .check:nth-child(8) > input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(2) .check:nth-child(9) > input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(2) .check:nth-child(10) > input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(2) .check:nth-child(11) > input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(2) .check:nth-child(12) > input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(2) .check:nth-child(13) > input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(2) .check:nth-child(14) > input").click()
    self.driver.find_element(By.CSS_SELECTOR, ".check:nth-child(15) > input").click()
    self.driver.find_element(By.CSS_SELECTOR, ".check:nth-child(16) > input").click()
    self.driver.find_element(By.CSS_SELECTOR, ".check:nth-child(17) > input").click()
    self.driver.find_element(By.CSS_SELECTOR, ".check:nth-child(18) > input").click()
    assert self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(2) > th input").is_selected() is True
  
  def test_031non(self):
    self.driver.get("https://beat-cms.dalkomm.com/beat_backoffice/tableorder/order/list")
    self.driver.set_window_size(1920, 1080)
    self.driver.find_element(By.CSS_SELECTOR, "li:nth-child(7) span").click()
    self.driver.find_element(By.CSS_SELECTOR, ".btn-default > strong").click()
    self.driver.find_element(By.NAME, "discount_menu_modal").click()
    self.driver.find_element(By.NAME, "discount_menu").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) .check:nth-child(2) > input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) .check:nth-child(3) > input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) .check:nth-child(4) > input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) .check:nth-child(5) > input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) .check:nth-child(6) > input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) .check:nth-child(7) > input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) .check:nth-child(8) > input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) .check:nth-child(9) > input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) .check:nth-child(10) > input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) .check:nth-child(11) > input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) .check:nth-child(12) > input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) .check:nth-child(13) > input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) .check:nth-child(14) > input").click()
    assert self.driver.find_element(By.NAME, "discount_category").is_selected() is True
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(2) > td > .check:nth-child(1) > input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(2) .check:nth-child(2) > input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(2) .check:nth-child(3) > input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(2) .check:nth-child(4) > input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(2) .check:nth-child(5) > input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(2) .check:nth-child(6) > input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(2) .check:nth-child(7) > input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(2) .check:nth-child(8) > input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(2) .check:nth-child(9) > input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(2) .check:nth-child(10) > input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(2) .check:nth-child(11) > input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(2) .check:nth-child(12) > input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(2) .check:nth-child(13) > input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(2) .check:nth-child(14) > input").click()
    self.driver.find_element(By.CSS_SELECTOR, ".check:nth-child(15) > input").click()
    self.driver.find_element(By.CSS_SELECTOR, ".check:nth-child(16) > input").click()
    self.driver.find_element(By.CSS_SELECTOR, ".check:nth-child(17) > input").click()
    self.driver.find_element(By.CSS_SELECTOR, ".check:nth-child(18) > input").click()
    assert self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(2) > th input").is_selected() is True
    assert self.driver.find_element(By.NAME, "discount_menu_all").is_selected() is True
  
  def test_033(self):
    self.driver.get("https://beat-cms.dalkomm.com/beat_backoffice/tableorder/order/list")
    self.driver.set_window_size(1920, 1080)
    self.driver.find_element(By.CSS_SELECTOR, "li:nth-child(7) span").click()
    self.driver.find_element(By.CSS_SELECTOR, ".btn-default > strong").click()
    assert self.driver.find_element(By.CSS_SELECTOR, "#form_tab1 .check:nth-child(4)").text == "전체 매장 전용 : 테스트 쿠폰 생성 시 사용"
    assert self.driver.find_element(By.CSS_SELECTOR, "#form_tab1 .check:nth-child(4) > input").is_selected() is True
  
  def test_034(self):
    self.driver.get("https://beat-cms.dalkomm.com/beat_backoffice/tableorder/order/list")
    self.driver.set_window_size(1920, 1080)
    self.driver.find_element(By.CSS_SELECTOR, "li:nth-child(7) span").click()
    self.driver.find_element(By.CSS_SELECTOR, ".btn-default > strong").click()
    self.driver.find_element(By.NAME, "publish_stores_type").click()
    assert self.driver.find_element(By.NAME, "publish_stores_type").is_selected() is True
  
  def test_035(self):
    self.driver.get("https://beat-cms.dalkomm.com/beat_backoffice/tableorder/order/list")
    self.driver.set_window_size(1920, 1080)
    self.driver.find_element(By.CSS_SELECTOR, "li:nth-child(7) span").click()
    self.driver.find_element(By.CSS_SELECTOR, ".btn-default > strong").click()
    self.driver.find_element(By.NAME, "publish_stores_type_button").click()
  
  def test_036(self):
    self.driver.get("https://beat-cms.dalkomm.com/beat_backoffice/tableorder/order/list")
    self.driver.set_window_size(1920, 1080)
    self.driver.find_element(By.CSS_SELECTOR, "li:nth-child(7) span").click()
    self.driver.find_element(By.CSS_SELECTOR, ".btn-default > strong").click()
    self.driver.find_element(By.NAME, "publish_stores_type_button").click()
    self.driver.find_element(By.NAME, "selected_store_all").click()
    assert self.driver.find_element(By.NAME, "selected_store_all").is_selected() is True
    assert self.driver.find_element(By.NAME, "selected_store").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .even:nth-child(2) input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .odd:nth-child(3) input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .even:nth-child(4) input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .odd:nth-child(5) input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .even:nth-child(6) input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .odd:nth-child(7) input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .even:nth-child(8) input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .odd:nth-child(9) input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .even:nth-child(10) input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .odd:nth-child(11) input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .even:nth-child(12) input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .odd:nth-child(13) input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .even:nth-child(14) input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .odd:nth-child(15) input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .even:nth-child(16) input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .odd:nth-child(17) input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .even:nth-child(18) input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .odd:nth-child(19) input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .even:nth-child(20) input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .odd:nth-child(21) input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .even:nth-child(22) input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .odd:nth-child(23) input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .even:nth-child(24) input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .odd:nth-child(25) input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .even:nth-child(26) input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .odd:nth-child(27) input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .even:nth-child(28) input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .odd:nth-child(29) input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .even:nth-child(30) input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .odd:nth-child(31) input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .even:nth-child(32) input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .odd:nth-child(33) input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .even:nth-child(34) input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .odd:nth-child(35) input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .even:nth-child(36) input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .odd:nth-child(37) input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .even:nth-child(38) input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .odd:nth-child(39) input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .even:nth-child(40) input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .odd:nth-child(41) input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .even:nth-child(42) input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .odd:nth-child(43) input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .even:nth-child(44) input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .odd:nth-child(45) input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .even:nth-child(46) input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .odd:nth-child(47) input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .even:nth-child(48) input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .odd:nth-child(49) input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .even:nth-child(50) input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(51) input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(52) input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(53) input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(54) input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(55) input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(56) input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(57) input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(58) input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(59) input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(60) input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(61) input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(62) input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(63) input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(64) input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(65) input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(66) input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(67) input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(68) input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(69) input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(70) input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(71) input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(72) input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(73) input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(74) input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(75) input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(76) input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(77) input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(78) input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(79) input").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(80) input").is_selected() is True
  
  def test_037(self):
    self.driver.get("https://beat-cms.dalkomm.com/beat_backoffice/tableorder/order/list")
    self.driver.set_window_size(1920, 1080)
    self.driver.find_element(By.CSS_SELECTOR, "li:nth-child(7) span").click()
    self.driver.find_element(By.CSS_SELECTOR, ".btn-default > strong").click()
    self.driver.find_element(By.NAME, "publish_stores_type_button").click()
    self.driver.find_element(By.NAME, "selected_store").click()
    self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .even:nth-child(2) input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .odd:nth-child(3) input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .even:nth-child(4) input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .odd:nth-child(5) input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .even:nth-child(6) input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .odd:nth-child(7) input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .even:nth-child(8) input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .odd:nth-child(9) input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .even:nth-child(10) input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .odd:nth-child(11) input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .even:nth-child(12) input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .odd:nth-child(13) input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .even:nth-child(14) input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .odd:nth-child(15) input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .even:nth-child(16) input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .odd:nth-child(17) input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .even:nth-child(18) input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .odd:nth-child(19) input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .even:nth-child(20) input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .odd:nth-child(21) input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .even:nth-child(22) input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .odd:nth-child(23) input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .even:nth-child(24) input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .odd:nth-child(25) input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .even:nth-child(26) input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .odd:nth-child(27) input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .even:nth-child(28) input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .odd:nth-child(29) input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .even:nth-child(30) input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .odd:nth-child(31) input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .even:nth-child(32) input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .odd:nth-child(33) input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .even:nth-child(34) input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .odd:nth-child(35) input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .even:nth-child(36) input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .odd:nth-child(37) input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .even:nth-child(38) input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .odd:nth-child(39) input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .even:nth-child(40) input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .odd:nth-child(41) input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .even:nth-child(42) input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .odd:nth-child(43) input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .even:nth-child(44) input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .odd:nth-child(45) input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .even:nth-child(46) input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .odd:nth-child(47) input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .even:nth-child(48) input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .odd:nth-child(49) input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .even:nth-child(50) input").click()
    self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(51) input").click()
    self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(52) input").click()
    self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(53) input").click()
    self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(54) input").click()
    self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(55) input").click()
    self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(56) input").click()
    self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(57) input").click()
    self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(58) input").click()
    self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(59) input").click()
    self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(60) input").click()
    self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(61) input").click()
    self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(62) input").click()
    self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(63) input").click()
    self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(64) input").click()
    self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(65) input").click()
    self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(66) input").click()
    self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(67) input").click()
    self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(68) input").click()
    self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(69) input").click()
    self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(70) input").click()
    self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(71) input").click()
    self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(72) input").click()
    self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(73) input").click()
    self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(74) input").click()
    self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(75) input").click()
    self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(76) input").click()
    self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(77) input").click()
    self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(78) input").click()
    self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(79) input").click()
    self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(80) input").click()
    assert self.driver.find_element(By.NAME, "selected_store_all").is_selected() is True
  
  def test_038(self):
    self.driver.get("https://beat-cms.dalkomm.com/beat_backoffice/tableorder/order/list")
    self.driver.set_window_size(1920, 1080)
    self.driver.find_element(By.CSS_SELECTOR, "li:nth-child(7) span").click()
    self.driver.find_element(By.CSS_SELECTOR, ".btn-default > strong").click()
    self.driver.find_element(By.NAME, "publish_stores_type_button").click()
    self.driver.find_element(By.NAME, "store_type").click()
    dropdown = self.driver.find_element(By.NAME, "store_type")
    dropdown.find_element(By.XPATH, "//option[. = '일반']").click()
    self.driver.find_element(By.CSS_SELECTOR, "#btnSearch > strong").click()
    assert self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .odd:nth-child(1) > td:nth-child(4)").text == "일반"
    self.driver.find_element(By.NAME, "store_type").click()
    dropdown = self.driver.find_element(By.NAME, "store_type")
    dropdown.find_element(By.XPATH, "//option[. = '기업']").click()
    self.driver.find_element(By.CSS_SELECTOR, "#btnSearch > strong").click()
    assert self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .odd:nth-child(1) > td:nth-child(4)").text == "기업"
    self.driver.find_element(By.NAME, "store_type").click()
    dropdown = self.driver.find_element(By.NAME, "store_type")
    dropdown.find_element(By.XPATH, "//option[. = '혼합']").click()
    self.driver.find_element(By.CSS_SELECTOR, "#btnSearch > strong").click()
    assert self.driver.find_element(By.CSS_SELECTOR, "tbody:nth-child(3) > .odd:nth-child(1) > td:nth-child(4)").text == "혼합"
  
  def test_039(self):
    self.driver.get("https://beat-cms.dalkomm.com/beat_backoffice/tableorder/order/list")
    self.driver.set_window_size(1920, 1080)
    self.driver.find_element(By.CSS_SELECTOR, "li:nth-child(7) span").click()
    self.driver.find_element(By.CSS_SELECTOR, ".btn-default > strong").click()
    self.driver.find_element(By.NAME, "publish_stores_type_button").click()
    self.driver.find_element(By.NAME, "region").click()
    dropdown = self.driver.find_element(By.NAME, "region")
    dropdown.find_element(By.XPATH, "//option[. = '서울']").click()
    self.driver.find_element(By.CSS_SELECTOR, "#btnSearch > strong").click()
    assert self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(1) > td:nth-child(3)").text == "서울"
    self.driver.find_element(By.NAME, "region").click()
    dropdown = self.driver.find_element(By.NAME, "region")
    dropdown.find_element(By.XPATH, "//option[. = '인천/경기']").click()
    self.driver.find_element(By.CSS_SELECTOR, "#btnSearch > strong").click()
    assert self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(1) > td:nth-child(3)").text == "인천/경기"
    self.driver.find_element(By.NAME, "region").click()
    dropdown = self.driver.find_element(By.NAME, "region")
    dropdown.find_element(By.XPATH, "//option[. = '강원']").click()
    self.driver.find_element(By.CSS_SELECTOR, "#btnSearch > strong").click()
    assert self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(1) > td:nth-child(3)").text == "강원"
    self.driver.find_element(By.NAME, "region").click()
    dropdown = self.driver.find_element(By.NAME, "region")
    dropdown.find_element(By.XPATH, "//option[. = '영남']").click()
    self.driver.find_element(By.CSS_SELECTOR, "#btnSearch > strong").click()
    assert self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(1) > td:nth-child(3)").text == "영남"
    self.driver.find_element(By.NAME, "region").click()
    dropdown = self.driver.find_element(By.NAME, "region")
    dropdown.find_element(By.XPATH, "//option[. = '호남']").click()
    self.driver.find_element(By.CSS_SELECTOR, "#btnSearch > strong").click()
    assert self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(1) > td:nth-child(3)").text == "호남"
    self.driver.find_element(By.NAME, "region").click()
    dropdown = self.driver.find_element(By.NAME, "region")
    dropdown.find_element(By.XPATH, "//option[. = '충청']").click()
    self.driver.find_element(By.CSS_SELECTOR, "#btnSearch > strong").click()
    assert self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(1) > td:nth-child(3)").text == "충청"
    self.driver.find_element(By.NAME, "region").click()
    dropdown = self.driver.find_element(By.NAME, "region")
    dropdown.find_element(By.XPATH, "//option[. = '제주']").click()
    self.driver.find_element(By.CSS_SELECTOR, "#btnSearch > strong").click()
    assert self.driver.find_element(By.CSS_SELECTOR, ".dataTables_empty").text == "매장 내역이 없습니다."
    self.driver.find_element(By.NAME, "region").click()
    dropdown = self.driver.find_element(By.NAME, "region")
    dropdown.find_element(By.XPATH, "//option[. = '해외']").click()
    self.driver.find_element(By.CSS_SELECTOR, "#btnSearch > strong").click()
    assert self.driver.find_element(By.CSS_SELECTOR, ".dataTables_empty").text == "매장 내역이 없습니다."
  
  def test_042(self):
    self.driver.get("https://beat-cms.dalkomm.com/beat_backoffice/tableorder/order/list")
    self.driver.set_window_size(1920, 1080)
    self.driver.find_element(By.CSS_SELECTOR, "li:nth-child(7) span").click()
    self.driver.find_element(By.CSS_SELECTOR, ".btn-default > strong").click()
    self.driver.find_element(By.NAME, "publish_stores_type_button").click()
    self.driver.find_element(By.NAME, "q").send_keys("!@#!")
    self.driver.find_element(By.CSS_SELECTOR, "#btnSearch > strong").click()
    assert self.driver.find_element(By.CSS_SELECTOR, ".dataTables_empty").text == "매장 내역이 없습니다."
  
  def test_045(self):
    self.driver.get("https://beat-cms.dalkomm.com/beat_backoffice/tableorder/order/list")
    self.driver.set_window_size(1920, 1080)
    self.driver.find_element(By.CSS_SELECTOR, "li:nth-child(7) span").click()
    self.driver.find_element(By.CSS_SELECTOR, ".btn-default > strong").click()
    self.driver.find_element(By.CSS_SELECTOR, "#form_tab1 .btn-green").click()
  
  def test_046(self):
    self.driver.get("https://beat-cms.dalkomm.com/beat_backoffice/tableorder/order/list")
    self.driver.set_window_size(1920, 1080)
    self.driver.find_element(By.CSS_SELECTOR, "li:nth-child(7) span").click()
    self.driver.find_element(By.CSS_SELECTOR, ".btn-default > strong").click()
    self.driver.find_element(By.CSS_SELECTOR, "#form_tab1 .btn-green").click()
    self.driver.find_element(By.ID, "all_kiosk_store_check").click()
    assert self.driver.find_element(By.ID, "all_kiosk_store_check").is_selected() is True
    assert self.driver.find_element(By.NAME, "kiosk_store_check").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(2) .kiosk_store_check").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(3) .kiosk_store_check").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(4) .kiosk_store_check").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(5) .kiosk_store_check").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(6) .kiosk_store_check").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(7) .kiosk_store_check").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(8) .kiosk_store_check").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(9) .kiosk_store_check").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(10) .kiosk_store_check").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(11) .kiosk_store_check").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(12) .kiosk_store_check").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(13) .kiosk_store_check").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(14) .kiosk_store_check").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(15) .kiosk_store_check").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(16) .kiosk_store_check").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(17) .kiosk_store_check").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(18) .kiosk_store_check").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(19) .kiosk_store_check").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(20) .kiosk_store_check").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(21) .kiosk_store_check").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(22) .kiosk_store_check").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(23) .kiosk_store_check").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(24) .kiosk_store_check").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(25) .kiosk_store_check").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(26) .kiosk_store_check").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(27) .kiosk_store_check").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(28) .kiosk_store_check").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(29) .kiosk_store_check").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(30) .kiosk_store_check").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(31) .kiosk_store_check").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(32) .kiosk_store_check").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(33) .kiosk_store_check").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(34) .kiosk_store_check").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(35) .kiosk_store_check").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(36) .kiosk_store_check").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(37) .kiosk_store_check").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(38) .kiosk_store_check").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(39) .kiosk_store_check").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(40) .kiosk_store_check").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(41) .kiosk_store_check").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(42) .kiosk_store_check").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(43) .kiosk_store_check").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(44) .kiosk_store_check").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(45) .kiosk_store_check").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(46) .kiosk_store_check").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(47) .kiosk_store_check").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(48) .kiosk_store_check").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(49) .kiosk_store_check").is_selected() is True
    assert self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(50) .kiosk_store_check").is_selected() is True
  
  def test_047(self):
    self.driver.get("https://beat-cms.dalkomm.com/beat_backoffice/tableorder/order/list")
    self.driver.set_window_size(1920, 1080)
    self.driver.find_element(By.CSS_SELECTOR, "li:nth-child(7) span").click()
    self.driver.find_element(By.CSS_SELECTOR, ".btn-default > strong").click()
    self.driver.find_element(By.CSS_SELECTOR, "#form_tab1 .btn-green").click()
    self.driver.find_element(By.NAME, "kiosk_store_check").click()
    self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(2) .kiosk_store_check").click()
    self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(3) .kiosk_store_check").click()
    self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(4) .kiosk_store_check").click()
    self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(5) .kiosk_store_check").click()
    self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(6) .kiosk_store_check").click()
    self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(7) .kiosk_store_check").click()
    self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(8) .kiosk_store_check").click()
    self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(9) .kiosk_store_check").click()
    self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(10) .kiosk_store_check").click()
    self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(11) .kiosk_store_check").click()
    self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(12) .kiosk_store_check").click()
    self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(13) .kiosk_store_check").click()
    self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(14) .kiosk_store_check").click()
    self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(15) .kiosk_store_check").click()
    self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(16) .kiosk_store_check").click()
    self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(17) .kiosk_store_check").click()
    self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(18) .kiosk_store_check").click()
    self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(19) .kiosk_store_check").click()
    self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(20) .kiosk_store_check").click()
    self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(21) .kiosk_store_check").click()
    self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(22) .kiosk_store_check").click()
    self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(23) .kiosk_store_check").click()
    self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(24) .kiosk_store_check").click()
    self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(25) .kiosk_store_check").click()
    self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(26) .kiosk_store_check").click()
    self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(27) .kiosk_store_check").click()
    self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(28) .kiosk_store_check").click()
    self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(29) .kiosk_store_check").click()
    self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(30) .kiosk_store_check").click()
    self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(31) .kiosk_store_check").click()
    self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(32) .kiosk_store_check").click()
    self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(33) .kiosk_store_check").click()
    self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(34) .kiosk_store_check").click()
    self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(35) .kiosk_store_check").click()
    self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(36) .kiosk_store_check").click()
    self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(37) .kiosk_store_check").click()
    self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(38) .kiosk_store_check").click()
    self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(39) .kiosk_store_check").click()
    self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(40) .kiosk_store_check").click()
    self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(41) .kiosk_store_check").click()
    self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(42) .kiosk_store_check").click()
    self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(43) .kiosk_store_check").click()
    self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(44) .kiosk_store_check").click()
    self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(45) .kiosk_store_check").click()
    self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(46) .kiosk_store_check").click()
    self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(47) .kiosk_store_check").click()
    self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(48) .kiosk_store_check").click()
    self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(49) .kiosk_store_check").click()
    self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(50) .kiosk_store_check").click()
    assert self.driver.find_element(By.ID, "all_kiosk_store_check").is_selected() is True
  
  def test_050(self):
    self.driver.get("https://beat-cms.dalkomm.com/beat_backoffice/tableorder/order/list")
    self.driver.set_window_size(1920, 1080)
    self.driver.find_element(By.CSS_SELECTOR, "li:nth-child(7) span").click()
    self.driver.find_element(By.CSS_SELECTOR, ".btn-default > strong").click()
    self.driver.find_element(By.CSS_SELECTOR, "#form_tab1 .btn-green").click()
    self.driver.find_element(By.NAME, "name").send_keys("!@#!")
    self.driver.find_element(By.CSS_SELECTOR, ".fr").click()
    assert self.driver.find_element(By.CSS_SELECTOR, ".dataTables_empty").text == "검색된 데이터가 없습니다."
  
